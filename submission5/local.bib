@article{Bourgeat2021AMF,
  title={A Multipurpose Formal RISC-V Specification},
  author={Thomas Bourgeat and Ian Clester and Andres Erbsen and Samuel Gruetter and A. Wright and A. Chlipala},
  journal={ArXiv},
  year={2021},
  volume={abs/2104.00762}
}

@article{sabelfeld2003language,
  title={Language-based information-flow security},
  author={Sabelfeld, Andrei and Myers, Andrew C},
  journal={IEEE Journal on selected areas in communications},
  volume={21},
  number={1},
  pages={5--19},
  year={2003},
  publisher={IEEE}
}
                  
@article{SkorstengaardSTKJFP,
  author    = {Lau Skorstengaard and
               Dominique Devriese and
               Lars Birkedal},
  title     = {StkTokens: Enforcing well-bracketed control flow and stack encapsulation
               using linear capabilities},
  journal   = {J. Funct. Program.},
  volume    = {31},
  pages     = {e9},
  year      = {2021},
  url       = {https://doi.org/10.1017/S095679682100006X},
  doi       = {10.1017/S095679682100006X},
  timestamp = {Sun, 16 May 2021 00:13:31 +0200},
  biburl    = {https://dblp.org/rec/journals/jfp/SkorstengaardDB21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{Cowan+98,
author = {Cowan, Crispin and Pu, Calton and Maier, Dave and Hintony, Heather and Walpole, Jonathan and Bakke, Peat and Beattie, Steve and Grier, Aaron and Wagle, Perry and Zhang, Qian},
title = {StackGuard: Automatic Adaptive Detection and Prevention of Buffer-Overflow Attacks},
year = {1998},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 7th Conference on USENIX Security Symposium - Volume 7},
pages = {5},
numpages = {1},
location = {San Antonio, Texas},
series = {SSYM’98}
}

@inproceedings{Dang+15,
author = {Dang, Thurston H.Y. and Maniatis, Petros and Wagner, David},
title = {The Performance Cost of Shadow Stacks and Stack Canaries},
year = {2015},
isbn = {9781450332453},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2714576.2714635},
doi = {10.1145/2714576.2714635},
booktitle = {Proceedings of the 10th ACM Symposium on Information, Computer and Communications Security},
pages = {555–566},
numpages = {12},
keywords = {shadow stack, stack cookie, stack canary},
location = {Singapore, Republic of Singapore},
series = {ASIA CCS ’15}
}



@inproceedings{Shanbhogue+19,
author = {Shanbhogue, Vedvyas and Gupta, Deepak and Sahita, Ravi},
title = {Security Analysis of Processor Instruction Set Architecture for Enforcing Control-Flow Integrity},
year = {2019},
isbn = {9781450372268},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/3337167.3337175},
doi = {10.1145/3337167.3337175},
booktitle = {Proceedings of the 8th International Workshop on Hardware and Architectural Support for Security and Privacy},
articleno = {8},
numpages = {11},
keywords = {ROP, control flow subversion attacks, COP, Control-flow integrity, shadow stack, JOP},
location = {Phoenix, AZ, USA},
series = {HASP ’19}
}

@inproceedings{Kuznetsov+14,
author = {Kuznetsov, Volodymyr and Szekeres, L\'{a}szl\'{o} and Payer, Mathias and Candea, George and Sekar, R. and Song, Dawn},
title = {Code-Pointer Integrity},
year = {2014},
isbn = {9781931971164},
publisher = {USENIX Association},
address = {USA},
booktitle = {Proceedings of the 11th USENIX Conference on Operating Systems Design and Implementation},
pages = {147–163},
numpages = {17},
location = {Broomfield, CO},
series = {OSDI’14}
}

@inproceedings{NagarakatteZMZ10,
  author    = {Santosh Nagarakatte and
               Jianzhou Zhao and
               Milo M. K. Martin and
               Steve Zdancewic},
  title     = {{CETS}: compiler enforced temporal safety for {C}},
  booktitle = {9th International Symposium on Memory Management},
  shortbooktitle = {ISMM},
  year      = {2010},
  pages     = {31-40},
  publisher = {ACM},
  isbn      = {978-1-4503-0054-4},
  ee        = {http://doi.acm.org/10.1145/1806651.1806657},
  url       = {http://acg.cis.upenn.edu/papers/ismm10_cets.pdf},
}
                  
@inproceedings{NagarakatteZMZ09,
  author    = {Santosh Nagarakatte and
               Jianzhou Zhao and
               Milo M. K. Martin and
               Steve Zdancewic},
  title     = {{SoftBound}: highly compatible and complete spatial memory
               safety for {C}},
  booktitle = {ACM SIGPLAN Conference on Programming
               Language Design and Implementation (PLDI)},
  shortbooktitle = {PLDI},
  publisher = {ACM},
  year      = {2009},
  isbn      = {978-1-60558-392-1},
  pages     = {245-258},
  ee        = {http://doi.acm.org/10.1145/1542476.1542504},
  url       = {http://repository.upenn.edu/cgi/viewcontent.cgi?article=1941&context=cis_reports},
}
  
@inproceedings{DeviettiBMZ08,
  author    = {Joe Devietti and
               Colin Blundell and
               Milo M. K. Martin and
               Steve Zdancewic},
  title     = {{HardBound}: Architectural Support for Spatial Safety of the
               {C} Programming Language},
  booktitle = {13th International Conference on Architectural
               Support for Programming Languages and Operating Systems},
  shortbooktitle = {ASPLOS},
  year      = {2008},
  pages     = {103-114},
  ee        = {http://doi.acm.org/10.1145/1346281.1346295},
  url       = {http://acg.cis.upenn.edu/papers/asplos08_hardbound.pdf},
}

@misc{intel_mpx2013,
        author={Bracher, Richard S.},           
       	title = {Introduction to {Intel Memory Protection} extensions},
	key = {Intel Corporation},
	howpublished = {\url{http://software.intel.com/en-us/articles/introduction-to-intel-memory-protection-extensions}},
	Note = {Accessed: 2020-07-03},
        date = 2013                  
}
                  
                  
@article{SkorstengaardLocal,
author = {Skorstengaard, Lau and Devriese, Dominique and Birkedal, Lars},
title = {Reasoning about a Machine with Local Capabilities: Provably Safe Stack and Return Pointer Management},
year = {2019},
issue_date = {January 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {42},
number = {1},
issn = {0164-0925},
url = {https://doi.org/10.1145/3363519},
doi = {10.1145/3363519},
journal = {ACM Trans. Program. Lang. Syst.},
month = dec,
articleno = {5},
numpages = {53},
keywords = {Capability machines, logical relations, local capabilities, CHERI, well-bracketed control flow, stack encapsulation, secure compilation}
}

  

@article{SkorstengaardSTK,
 author = {Skorstengaard, Lau and Devriese, Dominique and Birkedal, Lars},
 title = {StkTokens: Enforcing Well-Bracketed Control Flow and Stack Encapsulation Using Linear Capabilities},
 year = {2019},
 issue_date = {January 2019},
 publisher = {Association for Computing Machinery},
 address = {New York, NY, USA},
 volume = {3},
 number = {POPL},
 url = {https://doi.org/10.1145/3290332},
 doi = {10.1145/3290332},
 journal = {Proc. ACM Program. Lang.},
 month = jan,
 articleno = {Article 19},
 numpages = {28},
 keywords = {well-bracketed control flow, secure compilation, linear capabilities, fully abstract compilation, stack frame encapsulation, fully abstract overlay semantics, capability machines}
}


@inproceedings{Chisnall+15,
author = {Chisnall, David and Rothwell, Colin and Watson, Robert N.M. and Woodruff, Jonathan and Vadera, Munraj and Moore, Simon W. and Roe, Michael and Davis, Brooks and Neumann, Peter G.},
title = {Beyond the PDP-11: Architectural Support for a Memory-Safe C Abstract Machine},
year = {2015},
isbn = {9781450328357},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
url = {https://doi.org/10.1145/2694344.2694367},
doi = {10.1145/2694344.2694367},
booktitle = {Proceedings of the Twentieth International Conference on Architectural Support for Programming Languages and Operating Systems},
pages = {117–130},
numpages = {14},
keywords = {security, memory safety, compilers, processor design, bounds checking, capabilities, memory protection, C language},
location = {Istanbul, Turkey},
series = {ASPLOS ’15}
}
  


@inproceedings{Woodruff+14,
author = {Woodruff, Jonathan and Watson, Robert N.M. and Chisnall, David and Moore, Simon W. and Anderson, Jonathan and Davis, Brooks and Laurie, Ben and Neumann, Peter G. and Norton, Robert and Roe, Michael},
title = {The CHERI Capability Model: Revisiting RISC in an Age of Risk},
year = {2014},
isbn = {9781479943944},
publisher = {IEEE Press},
booktitle = {Proceeding of the 41st Annual International Symposium on Computer Architecuture},
pages = {457–468},
numpages = {12},
location = {Minneapolis, Minnesota, USA},
series = {ISCA ’14}
}

  

@article{provenance,
author = {Memarian, Kayvan and Gomes, Victor and Davis, Brooks and Kell, Stephen and Richardson, Alexander and Watson, Robert and Sewell, Peter},
year = {2019},
month = {01},
pages = {1-32},
title = {Exploring C semantics and pointer provenance},
volume = {3},
journal = {Proceedings of the ACM on Programming Languages},
doi = {10.1145/3290380}
}

@INPROCEEDINGS{6234468,

  author={J. A. {Goguen} and J. {Meseguer}},

  booktitle={1982 IEEE Symposium on Security and Privacy}, 

  title={Security Policies and Security Models}, 

  year={1982},

  volume={},

  number={},

  pages={11-11},}

@inproceedings{Tsampas+19,
  author    = {Stelios Tsampas and
               Dominique Devriese and
               Frank Piessens},
  title     = {Temporal Safety for Stack Allocated Memory on Capability Machines},
  booktitle = {32nd {IEEE} Computer Security Foundations Symposium, {CSF} 2019, Hoboken,
               NJ, USA, June 25-28, 2019},
  pages     = {243--255},
  publisher = {{IEEE}},
  year      = {2019},
  url       = {https://doi.org/10.1109/CSF.2019.00024},
  doi       = {10.1109/CSF.2019.00024},
  timestamp = {Wed, 16 Oct 2019 14:14:49 +0200},
  biburl    = {https://dblp.org/rec/conf/csfw/TsampasDP19.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}


@article{Georges+21,
  author    = {A{\"{\i}}na Linn Georges and
               Arma{\"{e}}l Gu{\'{e}}neau and
               Thomas Van Strydonck and
               Amin Timany and
               Alix Trieu and
               Sander Huyghebaert and
               Dominique Devriese and
               Lars Birkedal},
  title     = {Efficient and provable local capability revocation using uninitialized
               capabilities},
  journal   = {Proc. {ACM} Program. Lang.},
  volume    = {5},
  number    = {{POPL}},
  pages     = {1--30},
  year      = {2021},
  url       = {https://doi.org/10.1145/3434287},
  doi       = {10.1145/3434287},
  timestamp = {Wed, 17 Feb 2021 08:54:00 +0100},
  biburl    = {https://dblp.org/rec/journals/pacmpl/GeorgesGSTTHDB21.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{mit-riscv,
        author={Samuel Gruetter},           
       	title = {RISC-V Specification in Coq},
	howpublished = {\url{https://github.com/mit-plv/riscv-coq}},
        date = 2020
}

@article{JiaH11,
  author    = {Yue Jia and
               Mark Harman},
  title     = {An Analysis and Survey of the Development of Mutation
                  Testing},
  journal   = {IEEE Transactions on Software Engineering},
  volume    = {37},
  number    = {5},
  year      = {2011},
  pages     = {649-678},
  ee        = {http://doi.ieeecomputersociety.org/10.1109/TSE.2010.62},
  bibsource = {DBLP, http://dblp.uni-trier.de},
  url       = {http://crest.cs.ucl.ac.uk/fileadmin/crest/sebasepaper/JiaH10.pdf},
}

@inproceedings{GeorgesComplete,
   author    = {A{\"{\i}}na Linn Georges and
               Arma{\"{e}}l Gu{\'{e}}neau and
               Alix Trieu and
               Lars Birkedal},
title="Toward Complete Stack Safety for Capability Machines",
workshop="Workshop on Principles of Secure Compilation",
month=jan,
year=2021,
url="https://www.cs.au.dk/~trieu/publications/PRISC21.pdf"
}

@article{Goguen1982SecurityPA,
  title={Security Policies and Security Models},
  author={J. A. Goguen and J. Meseguer},
  journal={1982 IEEE Symposium on Security and Privacy},
  year={1982},
  pages={11-11}
}

@INPROCEEDINGS{Chiueh2001RAD,

  author={Tzi-Cker Chiueh and Fu-Hau Hsu},

  booktitle={Proceedings 21st International Conference on Distributed Computing Systems}, 

  title={RAD: a compile-time solution to buffer overflow attacks}, 

  year={2001},

  volume={},

  number={},

  pages={409-417},

  doi={10.1109/ICDSC.2001.918971}}

@article{Georges22:TempsDesCerises,
author = {Georges, A\"{\i}na Linn and Trieu, Alix and Birkedal, Lars},
title = {Le Temps Des Cerises: Efficient Temporal Stack Safety on Capability Machines Using Directed Capabilities},
year = {2022},
issue_date = {April 2022},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {6},
number = {OOPSLA1},
url = {https://doi.org/10.1145/3527318},
doi = {10.1145/3527318},
abstract = {Capability machines are a type of CPUs that support fine-grained privilege separation using capabilities, machine words that include forms of authority. Formal models of capability machines and associated calling conventions have so far focused on establishing two forms of stack safety properties, namely local state encapsulation and well-bracketed control flow. We introduce a novel kind of directed capabilities and show how to use them to make an earlier suggested calling convention more efficient. In contrast to earlier work on capability machine models we do not only consider integrity properties but also confidentiality properties; we provide a unary logical relation to reason about the former and a binary logical relation to reason about the latter, each expressive enough to reason about temporal stack safety. While the logical relations are useful for reasoning about concrete examples, they do not on their own demonstrate that stack safety holds for a large class of programs. Therefore, we also show full abstraction of a compiler from an overlay semantics that internalizes the calling convention as a single call step and explicitly keeps track of the call stack and frame lifetimes to a base capability machine. All results have been mechanized in Coq.},
journal = {Proc. ACM Program. Lang.},
month = {apr},
articleno = {74},
numpages = {30},
keywords = {security, full absraction, stack safety, capability machines, separation logic, logical relation, Iris}
}

@inproceedings{DBLP:conf/raid/VeendCB12,
  author    = {Victor van der Veen and
               Nitish dutt{-}Sharma and
               Lorenzo Cavallaro and
               Herbert Bos},
  editor    = {Davide Balzarotti and
               Salvatore J. Stolfo and
               Marco Cova},
  title     = {Memory Errors: The Past, the Present, and the Future},
  booktitle = {Research in Attacks, Intrusions, and Defenses - 15th International
               Symposium, {RAID} 2012, Amsterdam, The Netherlands, September 12-14,
               2012. Proceedings},
  series    = {Lecture Notes in Computer Science},
  volume    = {7462},
  pages     = {86--106},
  publisher = {Springer},
  year      = {2012},
  url       = {https://doi.org/10.1007/978-3-642-33338-5\_5},
  doi       = {10.1007/978-3-642-33338-5\_5},
  timestamp = {Thu, 14 Oct 2021 10:16:20 +0200},
  biburl    = {https://dblp.org/rec/conf/raid/VeendCB12.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sp/SzekeresPWS13,
  author    = {Laszlo Szekeres and
               Mathias Payer and
               Tao Wei and
               Dawn Song},
  title     = {SoK: Eternal War in Memory},
  booktitle = {2013 {IEEE} Symposium on Security and Privacy, {SP} 2013, Berkeley,
               CA, USA, May 19-22, 2013},
  pages     = {48--62},
  publisher = {{IEEE} Computer Society},
  year      = {2013},
  url       = {https://doi.org/10.1109/SP.2013.13},
  doi       = {10.1109/SP.2013.13},
  timestamp = {Wed, 16 Oct 2019 14:14:51 +0200},
  biburl    = {https://dblp.org/rec/conf/sp/SzekeresPWS13.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sp/HuSACSL16,
  author    = {Hong Hu and
               Shweta Shinde and
               Sendroiu Adrian and
               Zheng Leong Chua and
               Prateek Saxena and
               Zhenkai Liang},
  title     = {Data-Oriented Programming: On the Expressiveness of Non-control Data
               Attacks},
  booktitle = {{IEEE} Symposium on Security and Privacy, {SP} 2016, San Jose, CA,
               USA, May 22-26, 2016},
  pages     = {969--986},
  publisher = {{IEEE} Computer Society},
  year      = {2016},
  url       = {https://doi.org/10.1109/SP.2016.62},
  doi       = {10.1109/SP.2016.62},
  timestamp = {Thu, 23 Jun 2022 19:55:24 +0200},
  biburl    = {https://dblp.org/rec/conf/sp/HuSACSL16.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@misc{RISC-V-CC,
author={RISC-V Consortium},           
       	title = {RISC-V Calling Conventions},
	howpublished = {\url{https://github.com/riscv-non-isa/riscv-elf-psabi-doc/blob/master/riscv-cc.adoc}},
        date = 2022
}

@inproceedings{DBLP:conf/pldi/YangCER11,
  author    = {Xuejun Yang and
               Yang Chen and
               Eric Eide and
               John Regehr},
  editor    = {Mary W. Hall and
               David A. Padua},
  title     = {Finding and understanding bugs in {C} compilers},
  booktitle = {Proceedings of the 32nd {ACM} {SIGPLAN} Conference on Programming
               Language Design and Implementation, {PLDI} 2011, San Jose, CA, USA,
               June 4-8, 2011},
  pages     = {283--294},
  publisher = {{ACM}},
  year      = {2011},
  url       = {https://doi.org/10.1145/1993498.1993532},
  doi       = {10.1145/1993498.1993532},
  timestamp = {Mon, 02 Aug 2021 08:40:03 +0200},
  biburl    = {https://dblp.org/rec/conf/pldi/YangCER11.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@inproceedings{DBLP:conf/sp/WatsonWNMACDDGL15,
  author    = {Robert N. M. Watson and
               Jonathan Woodruff and
               Peter G. Neumann and
               Simon W. Moore and
               Jonathan Anderson and
               David Chisnall and
               Nirav H. Dave and
               Brooks Davis and
               Khilan Gudka and
               Ben Laurie and
               Steven J. Murdoch and
               Robert M. Norton and
               Michael Roe and
               Stacey D. Son and
               Munraj Vadera},
  title     = {{CHERI:} {A} Hybrid Capability-System Architecture for Scalable Software
               Compartmentalization},
  booktitle = {2015 {IEEE} Symposium on Security and Privacy, {SP} 2015, San Jose,
               CA, USA, May 17-21, 2015},
  pages     = {20--37},
  publisher = {{IEEE} Computer Society},
  year      = {2015},
  url       = {https://doi.org/10.1109/SP.2015.9},
  doi       = {10.1109/SP.2015.9},
  timestamp = {Sat, 09 Apr 2022 12:42:54 +0200},
  biburl    = {https://dblp.org/rec/conf/sp/WatsonWNMACDDGL15.bib},
  bibsource = {dblp computer science bibliography, https://dblp.org}
}

@article{phrack96:smashingthestack,
  author = {One, Aleph},
  biburl = {https://www.bibsonomy.org/bibtex/2daff1a97f8fa80ac9e0f9ab58a370b30/liangzk},
  journal = {Phrack},
  month = {November},
  number = 49,
>>>>>>> 5d4a55f5007e1eba3111628948526b6c7bcb1c31
  title = {Smashing the Stack for Fun and Profit},
  url = {http://www.phrack.com/issues.html?issue=49&id=14},
  volume = 7,
  year = 1996
}


@misc{mitre-cwe,
author="{MITRE Corporation}",
title="Common Weakness Enumeration:2022 Top 25 Most Dangerous Software Weaknesses",
howpublished = {\url{https://cwe.mitre.org/top25/archive/2022/2022_cwe_top25.html}},
year=2022}

@misc{msrc-bluehat,
author="Matt Miller",
title="Trends, challenges, and strategic shifts in the software vulnerability mitigation landscape",
howpublished={\url{https://github.com/Microsoft/MSRC-Security-Research/blob/master/presentations/2019_02_BlueHatIL/}},
year=2019}

@misc{chromium-security,
author="{Chromium Projects}",
title="Chromium Security:Memory Safety",
howpublished={\url{https://www.chromium.org/Home/chromium-security/memory-safety/}}
}


@INPROCEEDINGS {Gollapudi+23,
author = {R. Gollapudi and G. Yuksek and D. Demicco and M. Cole and G. N. Kothari and R. H. Kulkarni and X. Zhang and K. Ghose and A. Prakash and Z. Umrigar},
booktitle = {2023 2023 IEEE Symposium on Security and Privacy (SP) (SP)},
title = {Control Flow and Pointer Integrity Enforcement in a Secure Tagged Architecture},
year = {2023},
volume = {},
issn = {},
pages = {1780-1795},
abstract = {Control flow attacks exploit software vulnerabilities to divert the flow of control into unintended paths to ultimately execute attack code. This paper explores the use of instruction and data tagging as a general means of thwarting such control flow attacks, including attacks that rely on violating pointer integrity. Using specific types of narrow-width data tags along with narrow-width instruction tags embedded within the binary facilitates the security policies required to protect against such attacks, leading to a practically viable solution. Co-locating instruction tags close to their corresponding instructions within cache lines eliminates the need for separate mechanisms for instruction tag accesses. Information gleaned from the analysis phase of a compiler is augmented and used to generate the instruction and data tags. A full-stack implementation that consists of a modified LLVM compiler, modified Linux OS support for tags and a FPGA-implemented CPU hardware prototype for enforcing CFI, data pointer and code pointer integrity is demonstrated. With a modest hardware enhancement, the execution time of benchmark applications on the prototype system is shown to be limited to low, single-digit percentages of a baseline system without tagging.},
keywords = {control-flow-integrity,-hardware-security,-pointer-integrity,-security-architectures,-security-and-privacy-policies},
doi = {10.1109/SP46215.2023.00102},
url = {https://doi.ieeecomputersociety.org/10.1109/SP46215.2023.00102},
publisher = {IEEE Computer Society},
address = {Los Alamitos, CA, USA},
month = {may}
}


@inproceedings{Castro+06,
author = {Castro, Miguel and Costa, Manuel and Harris, Tim},
title = {Securing Software by Enforcing Data-Flow Integrity},
year = {2006},
isbn = {1931971471},
publisher = {USENIX Association},
address = {USA},
abstract = {Software attacks often subvert the intended data-flow in a vulnerable program. For example, attackers exploit buffer overflows and format string vulnerabilities to write data to unintended locations. We present a simple technique that prevents these attacks by enforcing data-flow integrity. It computes a data-flow graph using static analysis, and it instruments the program to ensure that the flow of data at runtime is allowed by the data-flow graph. We describe an efficient implementation of data-flow integrity enforcement that uses static analysis to reduce instrumentation overhead. This implementation can be used in practice to detect a broad class of attacks and errors because it can be applied automatically to C and C++ programs without modifications, it does not have false positives, and it has low overhead.},
booktitle = {Proceedings of the 7th Symposium on Operating Systems Design and Implementation},
pages = {147–160},
numpages = {14},
location = {Seattle, Washington},
series = {OSDI '06}
}
